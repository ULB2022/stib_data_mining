from sqlalchemy import create_engine
import pandas as pd
from datetime import timedelta, datetime

DB = "dm"
engine = create_engine(f"postgresql://localhost:5432/{DB}")


print("start")

l = 0
all_service_ids = [
    238421502,
    238382503,
    237474503,
    237138500,
    236898052,
    237568501,
    237237501,
    238127604,
    237235500,
    237023501,
    237261000,
    237517501,
    236744601,
    238202001,
    237420000,
    238322602,
    237406051,
    237954072,
    237633501,
    238221502,
    237549601,
    237074500,
    237248052,
    237593601,
    237310501,
    237596501,
    237437001,
    237402001,
    238377501,
    237550001,
    236917501,
    237259001,
    238166072,
    237100001,
    237183501,
    237076031,
    237155000,
    237156051,
    236934601,
    238380502,
    237278601,
    237616001,
    237642504,
    238006605,
    238068053,
    237153605,
    236272600,
    238423502,
    237003600,
    237430501,
    238217602,
    238167502,
    234147500,
    236999500,
    237505031,
    237443601,
    237520001,
    236628000,
    237318501,
    237097501,
    238400502,
    236972503,
    236996600,
    236974503,
    237128501,
    237465051,
    237055500,
    237094601,
    237239000,
    237601501,
    236988602,
    238266602,
    237635001,
    236980603,
    235895501,
    235926080,
    236774052,
    237102501,
    237291501,
    236963001,
    234104500,
    238158602,
    237005601,
    237540501,
    237103601,
    236892052,
    235005071,
    238108071,
    236269500,
    237567601,
    237544503,
    238264040,
    238231501,
    236986502,
    236950051,
    236560500,
    236711001,
    238433502,
    237619501,
    236496053,
    236941501,
    236184082,
    237620601,
    238276602,
    238229502,
    237279601,
    237451600,
    238160601,
    238389502,
    237148000,
    236916001,
    237529001,
    237077501,
    238239601,
    238405502,
    234567600,
    237130001,
    237401500,
    237254070,
    237113030,
    237566502,
    237562501,
    236743501,
    237037501,
    237647501,
    237038501,
    236702601,
    237429031,
    237319001,
    238219502,
    237602001,
    237311001,
    236270000,
    237108601,
    236891501,
    237395600,
    237476501,
    237625071,
    236808501,
    236804001,
    236961060,
    236680001,
    234154501,
    237604501,
    238157502,
    236889051,
    238460002,
    238225601,
    237214601,
    236802601,
    237137031,
    236301600,
    237121001,
    237587001,
    235573501,
    236942601,
    238176002,
    238201001,
    236901052,
    237521501,
    237071600,
    233930600,
    236300500,
    236299000,
    238425502,
    237019601,
    236968052,
    237309601,
    236900053,
    237288501,
    237445601,
    237548052,
    237532502,
    236298600,
    237469601,
    238178032,
    238205601,
    236444503,
    233813600,
    237158001,
    237167030,
    236998000,
    237410501,
    236531500,
    238199501,
    236487051,
    237269601,
    237049500,
    235811052,
    236899601,
    236296052,
    236994601,
    236823501,
    237132000,
    238249601,
    236695000,
    237250001,
    237379071,
    237244001,
    237002500,
    237324000,
    237622086,
    237502031,
    236978604,
    237424600,
    237127000,
    237251501,
    237078601,
    237467001,
    237046502,
    236893051,
    236678601,
    238306602,
    237041602,
    237472602,
    238314602,
    237608501,
    238357502,
    237969601,
    237098001,
    237022500,
    236993601,
    237640001,
    237377601,
    236364503,
    237486001,
    237091031,
    237526501,
    238087604,
    238429502,
    236809000,
    236923054,
    237017055,
    238349502,
    237538502,
    237160601,
    236679501,
    236801504,
    237287051,
    237322001,
    238169601,
    238375501,
    238074051,
    238234501,
    237159501,
    237120501,
    237231071,
    237083001,
    234578052,
    238391502,
    238311602,
    237997502,
    237516601,
    233931601,
    237134001,
    237598601,
    235954071,
    237422500,
    237477502,
    236330500,
    238273602,
    236955501,
    237015501,
    236803501,
    236573500,
    236683000,
    237519501,
    238366502,
    237241001,
    237456501,
    237399000,
    237542601,
    237393501,
    237461601,
    238247502,
    237586501,
    238344602,
    237056001,
    238129601,
    238174602,
    236811001,
    236681601,
    237186601,
    236516600,
    237583601,
    237386601,
    238193602,
    237569501,
    237579601,
    237649501,
    237000600,
    238453503,
    237564001,
    237605001,
    236896051,
    237242001,
    237591501,
    238255501,
    237645001,
    237463602,
    235572601,
    238317601,
    237243501,
    238463502,
    237110501,
    237072600,
    238131071,
    238270502,
    236924501,
    237578031,
    237252601,
    238245502,
    237575001,
    238304502,
    236538600,
    237452501,
    237233600,
    236755601,
    237282501,
    238227502,
    237515501,
    237139000,
    237514001,
    237067600,
    238243603,
    237482001,
    237388053,
    237534000,
    237417600,
    237172601,
    238135604,
    237574501,
    236897501,
    237473501,
    238038504,
    236665601,
    237518001,
    237539601,
    237129601,
    237600501,
    236757001,
    237468501,
    234467001,
    238259602,
    237650601,
    236430500,
    237584001,
    237493601,
    237597001,
    237042001,
    236953501,
    237001000,
    238197601,
    237312601,
    235536070,
    236726501,
    237126000,
    237381031,
    237392500,
    237570001,
    238466501,
    238072001,
    236967500,
    238223601,
    238330602,
    237409051,
    236325600,
    233815500,
    238036502,
    238370502,
    236593600,
    233817050,
    238097001,
    238119001,
    237385056,
    237631601,
    234065601,
    236940601,
    238233501,
    237117001,
    237304001,
    238431502,
    237638501,
    237415500,
    238195506,
    236965001,
    237104001,
    237413000,
    238262002,
    235974080,
    237995605,
    234042600,
    238476502,
    237592001,
    238253502,
    237656031,
    237075001,
    234566500,
    234031600,
    237096001,
    238203501,
    237648001,
    238378502,
    233898050,
    236957001,
    236764001,
    236824601,
    237135002,
    238447502,
    237510601,
    238427502,
    237541001,
    236895051,
    238164502,
    237390040,
    237524001,
    238237502,
    234499500,
    238207502,
    237580031,
    238236602,
    237006600,
    237044500,
    234468001,
    236519600,
    238162502,
    238372501,
    238364501,
    237599601,
    238308502,
    236763001,
    236753501,
    237315001,
    236919601,
    237455501,
    236786030,
    237585601,
]
for i in all_service_ids:
    sql = """select gst.route_id,
            gst.service_id as st_service_id,
            gscd.service_id  as cd_service_id,
            gst.trip_id as gst_trip_id,
            st.trip_id as st_trip_id,
            gst.trip_headsign,
            gst.direction_id,
            gst.block_id,
            gst.shape_id,
            st.arrival_time,
            st.departure_time,
            st.stop_id,
            st.stop_sequence,
            st.pickup_type,
            st.drop_off_type,
            gscd."date" as cd_date,
            gscd."day" as cd_day,
            gscd.exception as exception 
             from "gtfs3Sept_stop_times" st 
            left join
            "gtfs3Sept_trips" gst on st.trip_id = gst.trip_id 
            left join "calendar3sept" gscd on gst.service_id =gscd.service_id where
            gst.service_id={0}
            """.format(
        i
    )
    # if i == 238421502:
    #     print(sql)
    df_23 = pd.read_sql(sql, engine)
    l = len(df_23.index)

    print(f"Service id {i} have {l} rows")
    if l == 0:
        continue

    t = timedelta(days=1)
    df_23["processed_arrival_time"] = df_23.apply(
        lambda x: f"{str(int(x['arrival_time'].split(':')[0])%24)}:{':'.join(x['arrival_time'].split(':')[1:])}",
        axis=1,
    )

    df_23["processed_arrival_date"] = df_23.apply(
        lambda x: x["cd_date"] + t
        if int(x["arrival_time"].split(":")[0]) > 23
        else x["cd_date"],
        axis=1,
    )
    df_23["processed_arrival_datetime"] = df_23.apply(
        lambda x: datetime.strptime(
            f"{x['processed_arrival_date']} {x['processed_arrival_time']}",
            "%Y-%m-%d %H:%M:%S",
        ),
        axis=1,
    )

    print("end")

    df_23.to_sql("joinedsttc", engine, if_exists="append")
